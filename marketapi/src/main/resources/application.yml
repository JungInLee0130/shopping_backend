spring:
  config:
    import: env_local.yml

  application:
    name: ${APPLICATION_NAME}

---
spring:
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: ${AUTHORIZATION_URI}
            token-uri: ${TOKEN_URI}
            user-info-uri: ${USER_INFO_URI}
            user-name-attribute: id
        registration:
          kakao:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: ${REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname

---
spring:
  jpa:
    database-platform: org.hibernate.dialect.MariaDBDialect
    hibernate:
      globally_quoted_identifiers: true
      ddl-auto: create # 로컬환경 설정 : create, 운영환경 : validate로 바꾸기
    properties:
      hibernate:
        show_sql: true # sql 보기 옵션
        format_sql: true # 예쁘게 포맷팅
        highlight_sql: true # ANSI 코드에 색을 나타낸다
        use_sql_comments: true # SQL 내부에 /* */ 주석 추가
      #defer-datasource-initialization: true
  #sql:
    #init:
      #mode: always # data.sql에 작성된 코드로 데이터베이스 초기화

---
spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${MARIA_URL}
    username: ${MARIA_USERNAME}
    password: ${MARIA_PASSWORD}


---
#로그
#security logging level
#logging:
#  level:
#    org:
#      springframework:
#        security: debug
#      zercok: debug

---
logging:
  level:
    com.example.marketapi: debug
    #org.hibernate.SQL: debug # logger에 출력하려면
    #org.hibernate.type.descriptor.sql: trace # 파라미터 값 출력

---
jwt:
  header: Authorization
  secret: ${JWT_SECRET}
  token-validity-in-seconds: 86400
  key: ${JWT_SECRET}

---
spring:
  data:
    redis:
      port: ${REDIS_PORT}
      host: ${REDIS_HOST}

---
toss:
  api:
    key: ${TOSS_API_KEY}